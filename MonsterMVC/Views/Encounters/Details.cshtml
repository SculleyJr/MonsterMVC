@using MonsterMVC.Domain.Data
@using System.Collections.Generic
@model MonsterMVC.Domain.Data.Encounter


@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div id="partial">
    @{
        Html.RenderAction("SearchMonsters", "MonsterDataModels", new{ searchBy = "monsterName", search ="Zombie"});
    }
</div>
<div>
    <h4>Encounter</h4>
    <hr />
    <dl class="dl-horizontal"></dl>
</div>
<div id="MonsterCards">

</div>
<table>
    @{int i;}
    @{ int hp;}
    @foreach (var item in Model.ActiveMonsters)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Monster.Name)
            </td>
            <td>

             
                @Html.DisplayFor(modelItem => item.HealthPoints)
            </td>
            <td>
                @{
                    hp = item.HealthPoints;
                    ;
                }
                <form action="/action_page.php">
                    Damage: <input type="number" name="damage"><br>
                    <input type="button" value="damage" onclick="location.href = '@Url.Action("AlterHitPoints", "Encounters")'">
                </form>
                
            </td>

            @{ i = item.MonsterId;
                ; }
        </tr>
        <script src="https://code.jquery.com/jquery-3.3.1.min.js"
                integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
                crossorigin="anonymous"></script>
        <script>
            $(document).ready(function() {
                var search = @(i);

                var url = "@Html.Raw(Url.Action("GetMonster", "Monster", new {id = "urlId"}))";

                url = url.replace("urlId", search);

                $.get(url, function(data){ 
                    $('#MonsterCards').append(data);
                });
                
            });
        </script>
    }
</table>
@*<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>*@

