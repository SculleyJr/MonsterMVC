@model MonsterMVC.Domain.DomainModel.Monster

<div>
    <h4>Monster</h4>
    <hr />
    <dl class="dl-horizontal">

        <h3 style="text-align: center;">
            @Html.DisplayFor(model => model.Name)
        </h3>
        <div style="display: flex; justify-content: space-around;">
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Size)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Size)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Type)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Type)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Subtype)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Subtype)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Alignment)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Alignment)
                </dd>
            </div>
        </div>

        <div style="display: flex; justify-content: space-around;">
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.ArmorClass)
                </dt>


                <dd>
                    @Html.DisplayFor(model => model.ArmorClass)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.HitPoints)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.HitPoints)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.hHitdice)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.hHitdice)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Speed)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Speed)
                </dd>
            </div>
        </div>
        <div style="display: flex; justify-content: space-around;">
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Strength)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Strength)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Dexterity)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Dexterity)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Constitution)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Constitution)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Intelligence)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Intelligence)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Wisdom)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Wisdom)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Charisma)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Charisma)
                </dd>
            </div>
        </div>
        <div style="display: flex; justify-content: space-around;">
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Perception)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Perception)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.stealth)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.stealth)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.DamageVulnerabilities)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DamageVulnerabilities)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.DamageResistances)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DamageResistances)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.DamageImmunities)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DamageImmunities)
                </dd>
            </div>
        </div>
        <div style="display: flex; justify-content: space-around;">
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.ConditionImmunities)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ConditionImmunities)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Senses)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Senses)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.Languages)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Languages)
                </dd>
            </div>
            <div style="display: flex; flex-direction: column;">
                <dt>
                    @Html.DisplayNameFor(model => model.ChallengeRating)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ChallengeRating)
                </dd>
            </div>
        </div>
        <hr />
    <h4>
        @Html.DisplayNameFor(model => model.SpecialAbilities)
    </h4>
    @if(Model.SpecialAbilities != null)
    { 
        foreach (var item in Model.SpecialAbilities)
        {

            <h5>
                @Html.DisplayFor(modelItem => item.Name)
            </h5>
            <div style="display: flex; justify-content: space-around; align-content: flex-start;">
                <div style="display: flex; flex-direction: column;">
                    <dt>
                        @Html.DisplayNameFor(modelItem => item.AttackBonus)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => item.AttackBonus)
                    </dd>
                </div>
                <div style="display: flex; flex-direction: column;">
                    <dd>
                        @Html.DisplayFor(modelItem => item.Desc)
                    </dd>
                </div>
            </div>
        }
    }
        <h4>
            @Html.DisplayNameFor(model => model.Actions)
        </h4>
        <hr />
    @if (Model.Actions != null)
    {
        foreach (var item in Model.Actions)
        {
            <h5>
                @Html.DisplayFor(modelItem => item.Name)
            </h5>
            <div style="display: flex; justify-content: space-around; align-content: flex-start;">
                <div style="display: flex; flex-direction: column;">
                    <dt>
                        @Html.DisplayNameFor(modelItem => item.AttackBonus)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => item.AttackBonus)
                    </dd>
                </div>
                <div style="display: flex; flex-direction: column;">
                    <dd>
                        @Html.DisplayFor(modelItem => item.Desc)
                    </dd>
                </div>
            </div>
        }
    }
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>
